{"version":3,"sources":["TasksContext/index.js","TasksContext/useLocalStorage.js","CreateTaskButton/index.js","TasksCounter/index.js","TasksSearch/index.js","TasksItem/TasksItemLoading.js","TasksItem/TasksItemError.js","TasksEmpty/index.js","TasksItem/index.js","TasksList/index.js","Modal/index.js","App/AppUI.js","App/index.js","index.js"],"names":["TasksContext","React","createContext","TasksProvider","_ref","children","items","tasks","saveItem","saveTask","loading","error","itemName","initialValue","setItem","useState","setLoading","setError","useEffect","setTimeout","localStorageItems","localStorage","getItem","parsedItems","JSON","parse","stringify","newItems","useLocalStorage","searchValue","setSearchValue","openModal","setOpenModal","completedTasks","filter","task","completed","length","allTasks","findedTasks","text","toLowerCase","includes","createElement","Provider","value","completeTask","selectedTask","selectedTaskIndex","findIndex","deleteTask","splice","createTask","newTask","searchCoincidence","push","alert","CreateTaskButton","useContext","style","width","textWrap","border","padding","borderRadius","backgroundColor","color","fontWeight","onClick","onCreate","document","querySelector","TasksCounter","taskCounterText","console","log","Fragment","className","TasksSearch","placeholder","onChange","event","searchInput","target","TasksItemLoading","itemsArray","getElementsByClassName","count","setInterval","transform","TasksItemError","TasksEmpty","TasksItem","onComplete","onDelete","src","alt","TasksList","map","key","Modal","ReactDOM","createPortal","getElementById","AppUI","App","createRoot","render"],"mappings":"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","file":"static/js/main.1d6907bb.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { useLocalStorage } from \"./useLocalStorage\";\n\nconst TasksContext = React.createContext();\n    \nfunction TasksProvider({ children }) {\n    // localStorage.removeItem('tasks_v1')\n\n    // export let defaultTasks = [\n    //   { text: \"Cortar cebolla\", completed: true },\n    //   { text: \"Saltear el pollo\", completed: false },\n    //   { text: \"Vertir la crema\", completed: false },\n    //   { text: \"Incorporar las pastas\", completed: false },\n    //   { text: \"Servir en fuente\", completed: false },\n    // ]\n\n    // localStorage.setItem('tasks_v1', JSON.stringify(defaultTasks))\n    \n    const { items: tasks, saveItem: saveTask, loading, error } = useLocalStorage('tasks_v1', [])\n    const [searchValue, setSearchValue] = React.useState(\"\")\n    const [openModal, setOpenModal] = React.useState(false)\n\n    const completedTasks = tasks.filter(task => !!task.completed).length\n    const allTasks = tasks.length\n\n    const findedTasks = tasks.filter(task => task.text.toLowerCase().includes(searchValue.toLowerCase()))\n\n    const completeTask = (text) => {\n        const selectedTask = [...tasks]\n        const selectedTaskIndex = selectedTask.findIndex(task => task.text === text)\n        // console.log(selectedTask)\n        if( selectedTask[selectedTaskIndex].completed === true ) {\n            selectedTask[selectedTaskIndex].completed = false\n        }else{\n            selectedTask[selectedTaskIndex].completed = true\n        }\n        saveTask(selectedTask)\n        }\n\n    const deleteTask = (text) => {\n        const selectedTask = [...tasks]\n        const selectedTaskIndex = selectedTask.findIndex(task => task.text === text)\n        // console.log(selectedTask)\n        selectedTask.splice(selectedTaskIndex, 1)\n        saveTask(selectedTask)\n        }\n\n    const createTask = (text) => {\n        const newTask = [...tasks]\n        let searchCoincidence = newTask.filter(task => task.text.toLowerCase() === text.toLowerCase())\n        if(text !== \"\") {\n            if(searchCoincidence.length === 0) {\n                newTask.push({text: text, completed: false})\n                saveTask(newTask)\n                setOpenModal(true)\n                setTimeout(() => {\n                    setOpenModal(false)\n\n                },2000)\n            }else{\n                alert(\"Ya existe esta tarea\")\n                }\n            }\n    }\n    \n    return (\n        <TasksContext.Provider value={{\n            loading,\n            error,\n            completedTasks,\n            allTasks,\n            openModal,\n            setOpenModal,\n            searchValue,\n            setSearchValue,\n            findedTasks,\n            completeTask,\n            deleteTask,\n            createTask,\n            tasks,\n            saveTask,\n        }}>\n            { children }\n        </TasksContext.Provider>\n\n    )\n}\n\nexport { TasksContext, TasksProvider }","import React from \"react\";\n\nexport function useLocalStorage(itemName, initialValue) {\n    // console.log(localStorage)\n    const [items, setItem] = React.useState(initialValue)\n    const [loading, setLoading] = React.useState(true)\n    const [error, setError] = React.useState(false)\n\n    \n    React.useEffect(() => {\n        setTimeout(() => { // SIMULAR DEMORA EN CARGA DE CONTENIDO\n        try {\n            const localStorageItems = localStorage.getItem(itemName)\n            let parsedItems\n\n            if(!localStorageItems) {\n                localStorage.setItem(itemName, JSON.stringify(initialValue))\n                parsedItems = initialValue\n            } else {\n                parsedItems = JSON.parse(localStorageItems)\n                setItem(parsedItems)\n            }\n            setLoading(false) \n        } catch (error) {\n            setLoading(false) \n            setError(true)\n        }\n        },1000)\n    }, [])\n\n                \n    // console.log(localStorage)\n        \n    const saveItem = (newItems) => {\n    localStorage.setItem(itemName, JSON.stringify(newItems))\n    setItem(newItems)\n    }\n\n    // console.log(items)\n\n    return {items, saveItem, loading, error}\n}\n","import React from \"react\";\nimport { TasksContext } from \"../TasksContext\";\n\nfunction CreateTaskButton() {\n    const { createTask } = React.useContext(TasksContext)\n    let onCreate = () => createTask(document.querySelector(\".newTask-input\").value)\n\n    return (\n        <button style={{\n            width: \"min-content\",\n            textWrap: \"nowrap\",\n            border: \"none\",\n            padding: \"8px 12px\",\n            borderRadius: \"8px\",\n            backgroundColor: \"rgb(113 53 124)\",\n            color: \"white\",\n            fontWeight: \"400\"\n        }}\n        onClick={ onCreate }\n    >Crear tarea</button>\n    )\n}\n\nexport { CreateTaskButton }","import React from \"react\";\nimport { TasksContext } from \"../TasksContext\";\n\nimport './TasksCounter.css'\n\nfunction TasksCounter() {\n      const {\n        allTasks,\n        loading,\n        completedTasks,\n      } = React.useContext(TasksContext)\n  \n  let taskCounterText = \"\"\n  if (allTasks === completedTasks && allTasks !== 0) {\n    console.log(allTasks)\n\n    taskCounterText = `Felicidades, has completado todas las tareas!`\n  } else {\n    taskCounterText = `Has Completado ${completedTasks} de ${allTasks}`\n  }\n  if (loading) {\n    return (\n      <>\n        <div className='TasksTitleLoading'>\n        </div>\n        <div className='TasksCounterLoading'>\n        </div>\n      </>\n    )\n  } else {\n    return (\n      <>\n        <h1 className='TasksTitle'>Tus tareas</h1>\n        <h4 className='TasksCounter'>{taskCounterText}</h4>\n      </>\n\n    );\n  }\n}\n\nexport { TasksCounter }","import React from \"react\";\nimport { TasksContext } from \"../TasksContext\";\nimport \"./TasksSearch.css\";\n\nfunction TasksSearch() {\n  const { searchValue, setSearchValue, loading } = React.useContext(TasksContext)\n\n  if (loading) {\n    return (\n      <>\n        <div className=\"TasksSearchLoading\"/>\n      </>\n\n    )\n  } else {\n    return (\n      <>\n        <input className=\"TasksSearch\"\n          placeholder=\"Buscar...\"\n          value={searchValue}\n          onChange={(event) => {\n            let searchInput = (event.target.value)\n            setSearchValue(searchInput);\n          }} />\n      </>\n\n    )\n  }\n}\n\nexport { TasksSearch }","import React from \"react\";\nimport \"./TasksItemLoading.css\";\n\nfunction TasksItemLoading() {\n    let itemsArray = document.getElementsByClassName('loading-task-container')\n    setTimeout(() => {\n        let count = 0\n\n        setInterval(() => {\n            if (count < itemsArray.length) {\n                itemsArray[count].style.transform = \"scale(1)\"\n                count ++\n                // console.log(count)\n            }\n        }, 100);\n    }, 100)\n    \n    return (\n        <>\n        {/* <p> Cargando tareas...</p> */}\n        <div className=\"loading-task-container\">\n            <div className=\"loading-task-check\"></div>\n            <div className=\"loading-task-text\"></div>\n        </div>\n        <div className=\"loading-task-container\">\n            <div className=\"loading-task-check\"></div>\n            <div className=\"loading-task-text\"></div>\n        </div>\n        <div className=\"loading-task-container\">\n            <div className=\"loading-task-check\"></div>\n            <div className=\"loading-task-text\"></div>\n        </div>\n        <div className=\"loading-task-container\">\n            <div className=\"loading-task-check\"></div>\n            <div className=\"loading-task-text\"></div>\n            </div>\n        <div className=\"loading-task-container\">\n            <div className=\"loading-task-check\"></div>\n            <div className=\"loading-task-text\"></div>\n        </div>\n        <div className=\"loading-task-container\">\n            <div className=\"loading-task-check\"></div>\n            <div className=\"loading-task-text\"></div>\n        </div>\n        </>\n\n    )\n}\n\nexport { TasksItemLoading }","import React from \"react\";\n// import \"./TasksError.css\";\n\nfunction TasksItemError() {\n    return (\n        <p>Error al cargar tareas</p>\n    )\n}\n\nexport { TasksItemError }","import React from \"react\";\n// import \"./TasksEmpty.css\";\n\nfunction TasksEmpty() {\n    return (\n        <p>Crear tu primer tarea!</p>\n    )\n}\n\nexport { TasksEmpty }","import React from 'react';\n\nimport \"./TasksItem.css\"\nimport \"./TasksItemLoading\"\n\nfunction TasksItem({ text, completed, onComplete, onDelete }) {\n    return (\n      <li className={`TodoItem ${completed && \"TodoItem--completed\"}`}>\n        <span className={`Icon Icon-check ${completed && \"Icon-check--completed\"}`}\n        onClick={ onComplete }><img src=\"/check.png\" alt=\"check icon\"></img></span>\n        <p className={`TodoItem-p ${completed && \"TodoItem-p--completed\"}`}>{text}</p>\n        <img className={`Icon Icon-delete`} src=\"/x.png\" alt=\"delete\" onClick={ onDelete }></img>\n      </li>\n    );\n  }\n\nexport { TasksItem }","import React from 'react'\nimport { TasksContext } from '../TasksContext'\nimport { TasksItemLoading } from '../TasksItem/TasksItemLoading'\nimport { TasksItemError } from '../TasksItem/TasksItemError'\nimport { TasksEmpty } from '../TasksEmpty'\nimport { TasksItem } from '../TasksItem'\nimport './taskList.css'\n\n\nfunction TasksList() {\n  const { loading, error, findedTasks, completeTask, deleteTask } = React.useContext(TasksContext)\n  let children\n  if (loading) {\n    children = <TasksItemLoading />\n  }\n  else if (error) {\n    children = <TasksItemError />\n  }\n  else if (!loading && findedTasks.length === 0) {\n    children = <TasksEmpty />\n  }\n  else {\n    children = findedTasks.map(task => (\n      <TasksItem text={task.text} completed={task.completed} key={task.text} onComplete={() => completeTask(task.text)} onDelete={() => deleteTask(task.text)} />\n    ))\n  }\n  \n  return (\n      <ul className=\"tasksList\">\n        {children}\n      </ul>\n    )\n  }\n\nexport { TasksList }","import React from \"react\";\nimport ReactDOM from 'react-dom';\n\nfunction Modal({ children }) {\n    return ReactDOM.createPortal(\n        <div className=\"modal\">\n            <p> Tarea Agregada\n            { children }\n            </p>\n        </div>,\n\n        document.getElementById('modal')\n    )\n}\n\n\nexport { Modal }","import React from \"react\";\nimport { CreateTaskButton } from \"../CreateTaskButton\"\nimport { TasksCounter } from \"../TasksCounter\"\nimport { TasksSearch } from \"../TasksSearch\"\nimport { TasksList } from \"../TasksList\"\nimport { Modal } from \"../Modal\"\n\nimport { TasksContext } from \"../TasksContext\";\n\nfunction AppUI() {  \n    const { openModal } = React.useContext(TasksContext)\n    return (\n        <>\n            <section className='task-creator'>\n                <h2>Crear nueva tarea</h2>\n                <input className=\"newTask-input\" placeholder=\"Nombre de la tarea\" />\n\n                <CreateTaskButton />\n\n                {openModal && (\n                    <Modal />\n                )}\n            </section>\n\n            <section className='task-viewer'>\n                <TasksCounter />\n                <TasksSearch />\n                <TasksList />\n            </section>\n        </>\n    )\n}\n\nexport { AppUI }","import  React from \"react\";\nimport '../index.css';\n\nimport { AppUI } from \"./AppUI.js\";\nimport { TasksProvider } from \"../TasksContext/index.js\";\n\n\n\n\nexport function App() {\n  return (\n    <TasksProvider>\n      < AppUI />\n    </TasksProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { App } from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n\n\n\n\n"],"sourceRoot":""}